q()
getwd()
newpath = 'F:\\ws\\Ciencia de Dados\\DataScience'
setwd(newpath)
getwd()
sd
head(x=iris, n=2)
head(x=iris, n=2)
head(iris)
head(iris,2)
head(x=iris, n=2)
head(n=22)
head(n=2)
head(n=2,x=iris)
head(n=2)
help(sd)
esoph
head(esoph)
esoph
tail(esoph)
## selecionando a quantidade de reistros desejados, no caso seria no ex. 10
head(esoph, n=10)
tail(esoph, 10)
##em R quando usado a funcao dim() sempre mostrara na Ordem Linhas e Colunas
dim(esoph)
dim(esoph)[1]
length(esoph)
length(islands)
arquivoXLSX = file.choose()
arquivo2 = read.csv(arquivoXLSX,TRUE,sep = ',')
arquivo2 = read.csv(arquivoXLSX,header=TRUE,sep = ',')
planilha1 = read.xlsx(pathArquivo,sheets(1))
arquivo2 = read.csv(arquivoXLSX,header = FALSE,sep = ',')
planilha1 = read.xlsx(pathArquivo,sheets(1))
arquivo2
planilha1
arquivoXLSX = file.choose()
arquivo2 = read.csv(arquivoXLSX,header = FALSE,sep = ',')
arquivo2 = read.csv(arquivoXLSX,header = FALSE,sep = ',')
arquivo2
arquivo = read.csv(pathArquivo,header = TRUE,sep = ',')
arquivo = read.csv(pathArquivo,header = TRUE,sep = ';')
#install.packages("openxlsx")
library(openxlsx)
arquivo = read.csv(pathArquivo,header = TRUE,sep = ';')
pathArquivo = file.choose()
head(pathArquivo)
arquivo = read.csv(pathArquivo,header = TRUE,sep = ';')
arquivo
dim(arquivo)[1]
dim(arquivo)
arquivoXLSX = file.choose()
arquivo2 = read.csv(arquivoXLSX,header = TRUE,sep = ',')
arquivo2 = read.csv(arquivoXLSX,header = TRUE,sep = ';')
arquivo2
arquivoXLSX = file.choose()
planilha1 = read.xlsx(pathArquivo,sheets(1))
arquivoXLSX = read.xlsx(pathArquivo,sheets(1))
arquivoXLSX = file.choose()
arquivoXLSX = read.xlsx(pathArquivo,sheets(1))
planilha1 = read.xlsx(arquivoXLSX,sheets(1))
planilha1
arquivoXLSX = file.choose()
planilha1 = read.xlsx(arquivoXLSX,sheets(1))
planilha1 = read.xlsx(arquivoXLSX, sheet = 1)
planilha1
dim(planilha1)
arquivoXLSX = file.choose()
planilha1 = read.xlsx(arquivoXLSX, sheet = 1)
planilha1
length(planilha1)
arqxls = file.exists()
arqxls = file.exists(arquivoXLSX)
arqxls
arquivoXLSX = file.choose()
arqxls = file.exists(arquivoXLSX)
arqxls
arqxls = file.show()
arqxls = file.show(arquivoXLSX)
arquivo2 = read.csv(arquivoXLSX,header = TRUE,sep = '|')
length(arquivo2)
dim(planilha1)
dim(arquivo2)
arqxls = file.choose(arquivoXLSX)
arqxls
abrirArquivo = read.xlsx(arqxls,sheet = 1)
#install.packages("openxlsx")
library(openxlsx)
abrirArquivo = read.xlsx(arqxls,sheet = 1)
getwd()
setwd('F:\\ws\\Ciencia de Dados\\DataScience\\exemploDados')
getwd()
setwd('F:\\ws\\Ciencia de Dados\\DataScience\\exemploDados')
abrirArquivo = read.xlsx(arqxls,sheet = 1)
arqxls = file.choose(arquivoXLSX)
abrirArquivo = read.xlsx(arqxls,sheet = 1)
abrirArquivo
install.packages('openxlsx')
library(openxlsx)
## tratamento com arquivos CSV
path_file = file.choose()
file.exists(path_file)
dados = read.csv(path_file,header = TRUE, sep = ';')
dados = read.csv(path_file,header = FALSE, sep = ';')
dados = read.csv(path_file,header = FALSE, sep = ',')
dados
dados = read.csv(path_file,header = TRUE, sep = ',')
FALSE
dados
dados = read.csv(path_file,header = FALSE, sep = ';')
dados
dados = read.csv2(path_file, header = FALSE, sep = ';')
dados = read.csv2(path_file, TRUE, sep = ';')
file.exists(path_file)
## tratamento com arquivos CSV
path_file = file.choose()
file.exists(path_file)
if(file.exists(path_file))
dados = read.csv2(path_file, header = FALSE, sep = ';')
dados
dados = read.csv2(path_file, header = TRUE, sep = ';')
dados
dados = read.csv(path_file, header = TRUE, sep = ';')
dados
dados = read.csv(path_file, header = TRUE, sep = ',')
dados
pathxlsx = file.choose()
## tratamento com arquivo XLSX
pathxlsx = file.choose()
if(file.exists(pathxlsx))
dados = read.xlsx(pathxlsx, sheet = 1)
dados
## tratamento com arquivo XLSX
pathxlsx = file.choose()
if(file.exists(pathxlsx))
dados = read.xlsx(pathxlsx, sheet = 1)
dados
dim(dados)
##IF
a = 9
b = 10
if(a>b){
print('A é Maior')
}else{
print('B é Maior')
}
##IFELSE
x = ifelse(a > b, 'A é Maior', 'B é Maior')
x
library('openXLSX')
library('openxlsx')
pathFile = file.choose()
dados = read.xlsx(pathFile, sheet = 1)
for (i in dados[1]) {
print(i)
}
for (i in dados) {
print(i, '\n')
}
print(i)
for (i in dados) {
print(i)
}
for (i in dados[1][2]) {
print(i)
}
for (i in dados[1][2]) {
print(i)
}
for (i in dados[1],[2]) {
for (i in dados[2]) {
print(i)
}
print(f'Idade é: ',{i})
print(f'Idade é: ',[i])
##FOR
dados
for (i in dados[2]) {
print(i)
}
for (i in dados.(dados)) {
print(i)
}
for (i in dados) {
print(i)
}
print(is.name())
print(i
}
print(i)
##While
while (dados[4] in 'a') {
##While
while (dados[4] == 'a') {
print(dados)
}
##While
while (is.character(dados[4] == 'a')) {
print(dados)
}
##While
i = 0
while (i < 20) {
print(dados)
i += 1
##While
i = 0
while (i < 20) {
print(dados)
i = 1 + i
}
##While
i = 0
while (i < 20) {
print(dados)
i = i + 1
}
##While
i = 0
while (i < 5) {
print(dados)
i = i + 1
}
##While
i = 0
while (i < 3) {
print(dados)
i = i + 1
}
##While
i = 0
while (i < 3) {
print(i)
i = i + 1
}
##While
i = 0
while (i < 20) {
print(i)
i = i + 1
}
##While
i = 1
while (i < 20) {
print(i)
i = i + 1
}
##While
i = 1
while (i <= 20) {
print(i)
i = i + 1
}
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return ifelse(x % 2 == 0, 'Par', 'Impar')
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x % 2 == 0, 'Par', 'Impar'))
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return ifelse(x %% 2 == 0, 'Par', 'Impar')
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return ifelse(x %% 2 == 0, "Par", "Impar")
##Funcoes
### <nomeFuncao> = function(){}
parImpar <- function(x){
return ifelse(x %% 2 == 0, "Par", "Impar")
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return ifelse(x %% 2 == 0, "Par", Impar)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", Impar))
}
parImpar(345)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x % 2 == 0, "Par", "Impar"))
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2548)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2)
parImpar(0)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x = 0){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2)
parImpar(0)
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x = 0){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2)
parImpar()
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2)
parImpar()
##Funcoes
### <nomeFuncao> = function(){}
parImpar = function(x){
return (ifelse(x %% 2 == 0, "Par", "Impar"))
}
parImpar(345)
parImpar(2584788)
parImpar(-2)
Ana = 8L
Paulo = 10L
if(Paulo > Ana){
print('O Menino é mais velho')
}else{
print('A Menina é mais velha')
}
help(BOD)
class(BOD)
BOD
numeros = c[1,2,3,4,5,6,7,8,9,10]
numeros = c(1,2,3,4,5,6,7,8,9,10)
for i in numeros{
numeros = c(1,2,3,4,5,6,7,8,9,10)
for i in numeros{
numeros = c(1,2,3,4,5,6,7,8,9,10)
for i in numeros
numeros = c(1,2,3,4,5,6,7,8,9,10)
for (i in numeros){
if(i %% 2 == 0){
print(i)
}
}
numeros = c(1,2,3,4,5,6,7,8,9,10)
for (i in numeros) {
if (numeros[i]%%2==0)
print(numeros[i])
}
head(women)
head(women)[10]
head(women)(10)
head(women, 10)
head(women, 0)
tail(women, 10)
plot(iris)
iris
plot(iris[50,100])
plot(iris[50:100])
plot(iris[50:100,50:100])
plot(iris[50:100,])
plot(iris[50:100,])
plot(iris[50:100,c(2,3)])
v1 = c(1,2,6,5,8)
v2 = c(25,144,69,5)
print(v1+v2)
v1 = c(1,2,6,5,8)
v2 = c(25,144,69,5,1)
print(v1+v2)
CO2
dim(CO2)[1]
dim(CO2)[2]
colnames(CO2)
rownames(CO2)
dim(CO2)[1]
dim(CO2)[2]
rownames(CO2)
colnames(CO2)
vet1 = c(1,2,3,4)
vet2 = c(4,3,2,1)
print(vet1 + vet2)
novairis = iris[50:100,c(2,3)]
plot(novairis)
esoph
